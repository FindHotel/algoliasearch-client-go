// Code generated by go generate. DO NOT EDIT.

package search

import (
    iopt "github.com/algolia/algoliasearch-client-go/algolia/internal/opt"
    "github.com/algolia/algoliasearch-client-go/algolia/opt"
)

type searchParams struct {
    Query string `json:"query"`
    QueryParams
}

func newSearchParams(query string, opts ...interface{}) searchParams {
    return searchParams{
        Query:       query,
        QueryParams: newQueryParams(opts...),
    }
}

type searchForFacetValuesParams struct {
    FacetQuery string `json:"facetQuery"`
    QueryParams
}

func newSearchForFacetValuesParams(query string, opts ...interface{}) searchForFacetValuesParams {
    return searchForFacetValuesParams{
        FacetQuery:  query,
        QueryParams: newQueryParams(opts...),
    }
}

type QueryParams struct {
    {{- range $_, $param := . }}
    {{ title $param.Name }} *opt.{{ title $param.Name }}Option `json:"{{ $param.Name }},omitempty"`
    {{- end }}
}

func newQueryParams(opts ...interface{}) QueryParams {
    return QueryParams{
        {{- range $_, $setting := . }}
        {{ title $setting.Name }}: iopt.Extract{{ title $setting.Name }}(opts...),
        {{- end }}
    }
}

