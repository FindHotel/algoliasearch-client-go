// Code generated by go generate. DO NOT EDIT.

package opt

import "encoding/json"

type MinProximityOption struct {
	value int
}

func MinProximity(v int) *MinProximityOption {
	return &MinProximityOption{v}
}

func (o *MinProximityOption) Get() int {
	if o == nil {
		return 1
	}
	return o.value
}

func (o MinProximityOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(o.value)
}

func (o *MinProximityOption) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		o.value = 1
		return nil
	}
	return json.Unmarshal(data, &o.value)
}

func (o *MinProximityOption) Equal(o2 *MinProximityOption) bool {
	if o2 == nil {
		return o.value == 1
	}
	return o.value == o2.value
}

func MinProximityEqual(o1, o2 *MinProximityOption) bool {
	if o1 != nil {
		return o1.Equal(o2)
	}
	if o2 != nil {
		return o2.Equal(o1)
	}
	return true
}
