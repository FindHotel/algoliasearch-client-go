// Code generated by go generate. DO NOT EDIT.

package opt

import "encoding/json"

type QueryTypeOption struct {
	value string
}

func QueryType(v string) *QueryTypeOption {
	return &QueryTypeOption{v}
}

func (o *QueryTypeOption) Get() string {
	if o == nil {
		return "prefixLast"
	}
	return o.value
}

func (o QueryTypeOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(o.value)
}

func (o *QueryTypeOption) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		o.value = "prefixLast"
		return nil
	}
	return json.Unmarshal(data, &o.value)
}

func (o *QueryTypeOption) Equal(o2 *QueryTypeOption) bool {
	if o2 == nil {
		return o.value == "prefixLast"
	}
	return o.value == o2.value
}

func QueryTypeEqual(o1, o2 *QueryTypeOption) bool {
	if o1 != nil {
		return o1.Equal(o2)
	}
	if o2 != nil {
		return o2.Equal(o1)
	}
	return true
}
