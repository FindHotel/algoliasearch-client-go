// Code generated by go generate. DO NOT EDIT.

package opt

import "encoding/json"

type AroundPrecisionOption struct {
	value int
}

func AroundPrecision(v int) *AroundPrecisionOption {
	return &AroundPrecisionOption{v}
}

func (o *AroundPrecisionOption) Get() int {
	if o == nil {
		return 1
	}
	return o.value
}

func (o AroundPrecisionOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(o.value)
}

func (o *AroundPrecisionOption) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		o.value = 1
		return nil
	}
	return json.Unmarshal(data, &o.value)
}

func (o *AroundPrecisionOption) Equal(o2 *AroundPrecisionOption) bool {
	if o2 == nil {
		return o.value == 1
	}
	return o.value == o2.value
}

func AroundPrecisionEqual(o1, o2 *AroundPrecisionOption) bool {
	if o1 != nil {
		return o1.Equal(o2)
	}
	if o2 != nil {
		return o2.Equal(o1)
	}
	return true
}
