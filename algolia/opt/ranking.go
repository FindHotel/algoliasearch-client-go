// Code generated by go generate. DO NOT EDIT.

package opt

import (
	"encoding/json"
	"reflect"
)

type RankingOption struct {
	value []string
}

func Ranking(v ...string) *RankingOption {
	return &RankingOption{v}
}

func (o *RankingOption) Get() []string {
	if o == nil {
		return []string{"typo", "geo", "words", "filters", "proximity", "attribute", "exact", "custom"}
	}
	return o.value
}

func (o RankingOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(o.value)
}

func (o *RankingOption) UnmarshalJSON(data []byte) error {
	if string(data) == "null" {
		o.value = []string{"typo", "geo", "words", "filters", "proximity", "attribute", "exact", "custom"}
		return nil
	}
	return json.Unmarshal(data, &o.value)
}

func (o *RankingOption) Equal(o2 *RankingOption) bool {
	if o2 == nil {
		return reflect.DeepEqual(o.value, []string{"typo", "geo", "words", "filters", "proximity", "attribute", "exact", "custom"})
	}
	return reflect.DeepEqual(o.value, o2.value)
}

func RankingEqual(o1, o2 *RankingOption) bool {
	if o1 != nil {
		return o1.Equal(o2)
	}
	if o2 != nil {
		return o2.Equal(o1)
	}
	return true
}
